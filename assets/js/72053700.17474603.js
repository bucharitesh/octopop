"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[2951],{2156:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>a});var n=r(9214),s=r(9744);const c={},o="Function: fetcher()",i={id:"api/functions/fetcher",title:"Function: fetcher()",description:"fetcher\\(input, init?): Promise\\",source:"@site/docs/api/functions/fetcher.md",sourceDirName:"api/functions",slug:"/api/functions/fetcher",permalink:"/docs/api/functions/fetcher",draft:!1,unlisted:!1,editUrl:"https://github.com/bucharitesh/octopop/edit/main/website/docs/api/functions/fetcher.md",tags:[],version:"current",frontMatter:{}},h={},a=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Source",id:"source",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"function-fetcher",children:"Function: fetcher()"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"fetcher"}),"<",(0,n.jsx)(t.code,{children:"JSON"}),">(",(0,n.jsx)(t.code,{children:"input"}),", ",(0,n.jsx)(t.code,{children:"init"}),"?): ",(0,n.jsx)(t.code,{children:"Promise"}),"< ",(0,n.jsx)(t.code,{children:"JSON"})," >"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Performs a fetch operation and returns the response data as JSON.\nThrows an error if the response is not successful (HTTP status code other than 2xx)."}),"\n",(0,n.jsx)(t.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.strong,{children:"JSON"})," = ",(0,n.jsx)(t.code,{children:"any"})]}),"\n",(0,n.jsx)(t.p,{children:"The type of the JSON response data."}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.strong,{children:"input"}),": ",(0,n.jsx)(t.code,{children:"RequestInfo"})]}),"\n",(0,n.jsx)(t.p,{children:"The URL or Request object."}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.strong,{children:"init?"}),": ",(0,n.jsx)(t.code,{children:"RequestInit"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The options for the fetch request."}),"\n",(0,n.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"Promise"}),"< ",(0,n.jsx)(t.code,{children:"JSON"})," >"]}),"\n",(0,n.jsx)(t.p,{children:"A Promise that resolves with the response data as JSON if the fetch is successful, or rejects with a SWRError if the fetch fails or the response is not successful."}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:'// Perform a fetch request to retrieve JSON data\nfetcher<Data>("https://api.example.com/data", { method: "GET" })\n  .then(data => {\n    console.log("Data:", data);\n  })\n  .catch(error => {\n    console.error("Error:", error);\n  });\n'})}),"\n",(0,n.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/bucharitesh/octopop/blob/79bf9c3/packages/utils/src/functions/fetcher.ts#L29",children:"functions/fetcher.ts:29"})})]})}function l(e={}){const{wrapper:t}={...(0,s.RP)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},9744:(e,t,r)=>{r.d(t,{RP:()=>c});var n=r(8318);const s=n.createContext({});function c(e){const t=n.useContext(s);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);